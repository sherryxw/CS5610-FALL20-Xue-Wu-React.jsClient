{"version":3,"sources":["logo.svg","serviceWorker.js","services/CourseService.js","services/LessonService.js","components/CourseEditor/LessonTabsComponent.js","services/TopicPillsService.js","components/CourseEditor/TopicPillsComponent.js","components/widgets/HeadingWidget.js","components/widgets/ParagraphWidget.js","services/WidgetService.js","components/CourseEditor/WidgetList.js","containers/WidgetListContainer.js","actions/widgetActions.js","services/ModuleService.js","components/CourseEditor/ModuleListComponent.js","components/CourseEditor/CourseEditorComponent.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCard.js","components/CourseGridComponent.js","components/CourseManagerComponent.js","reducers/widgetReducer.js","reducers/moduleReducer.js","reducers/courseReducer.js","reducers/lessonReducer.js","reducers/topicPillsReducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","url","createCourse","newCourse","fetch","method","body","JSON","stringify","headers","then","response","json","deleteCourse","courseId","updateCourse","lessonUrl","moduleUrl","moduleId","lesson","lessonId","selected_id","connect","state","lessons","lessonReducer","topicPillsReducer","course","courseReducer","dispatch","ok","LessonService","_id","editing","status","type","edit","updateLesson","newLesson","actualLesson","deleteLesson","createLesson","title","updateLessonTitle","className","map","key","to","onClick","onChange","event","target","value","aria-hidden","topicPillUrl","topic","topicPill","topicPillId","topicPills","topicId","widgetReducer","createTopic","TopicPillsService","actualTopic","deleteTopicPills","updateTopicTitle","HeadingWidget","index","length","widget","moveWidgetPos","updateWidget","deleteWidget","id","placeholder","text","size","parseInt","name","ParagraphWidget","WIDGET_URL","TOPIC_URL","widgets","widgetId","createWidgetForTopic","WidgetService","saveButton","fromPos","toPos","useState","setEditing","htmlFor","WidgetList","courseUrl","modules","moduleReducer","moduleService","deleteModule","createModule","actualModule","updateModule","CourseEditorComponent","this","props","params","findCourseById","findModulesForCourse","clearTopic","clearLesson","cleanWidget","findLessonsForModule","findTopicPillsForLesson","findWidgetsForTopic","prevProps","prevState","snapshot","LessonTabsComponent","TopicPillsComponent","WidgetListContainer","React","Component","findAllWidgets","actualCourse","ModuleService","actualModules","noLessonId","noModuleId","noTopicId","CourseRowComponent","updateTitle","newTitle","setState","updateCourseToServer","selectedToggle","selected","background","font","style","owner","modified","CourseTableComponent","courses","editCourse","CourseCard","src","CourseGridComponent","CourseManagerComponent","courseBeingEdited","layout","inputCourseTitle","changeView","filter","c","catch","error","addCourse","Date","toDateString","path","exact","href","component","initialState","action","newWidgets","splice","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.1a96ff3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/courses\"\n\nexport const findAllCourses = () =>\n    fetch(url)\n        .then(response => response.json())\n\nexport const findCourseById = (id) =>\n    fetch(`${url}/${id}`)\n        .then(response => response.json())\n\nexport const createCourse = (newCourse) =>\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(newCourse),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteCourse = (courseId) =>\n    fetch(`${url}/${courseId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n\nexport const updateCourse = (courseId, newCourse) =>\n    fetch(`${url}/${courseId}`, {\n        method: 'PUT',\n        body: JSON.stringify(newCourse),\n        headers: {\n            'content-type': 'application/json'\n        }\n    }).then(response => response.json())\n\n\n\n","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/lessons\"\nconst moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/modules\"\n\nexport const findLessonsForModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`)\n        .then(response => response.json())\n\nexport const createLesson = (moduleId, lesson) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`, {\n        method: \"POST\",\n        body: JSON.stringify(lesson),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const updateLesson = (lessonId, lesson) =>\n    fetch(`${lessonUrl}/${lessonId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(lesson),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport const deleteLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}`,{\n        method: \"DELETE\"\n    }).then(response => response.json())\n\n\nexport default {\n    findLessonsForModule,\n    createLesson,\n    deleteLesson,\n    updateLesson\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport LessonService from \"../../services/LessonService\";\nimport {Link} from \"react-router-dom\";\n\nlet selected_id = \"\"\nconst LessonTabs = (\n    {\n        course={},\n        moduleId,\n        lessons=[],\n        createLesson,\n        deleteLesson,\n        updateLessonTitle,\n        edit,\n        ok,\n        lessonId\n    }) =>\n\n    <div>\n        <ul className=\"nav nav-tabs wbdv-lesson-tabs tabs-border\">\n            {\n                lessons.map(lesson =>\n                        <li key={lesson._id} className=\"nav-item\">\n                            <div className={`nav-link tab-info \n                            ${selected_id===lesson._id || lessonId===lesson._id ? 'tab-active' : ''}`}>\n                                {\n                                    !lesson.editing &&\n                                        <span>\n                                            <Link to={`/edit/course/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}\n                                                  className=\"link\">{lesson.title}</Link>\n                                            <i onClick={() => {edit(lesson); selected_id=lesson._id}}\n                                               className=\"fa fa-pencil pull-right\"/>\n                                        </span>\n                                }\n                                {\n                                    lesson.editing &&\n                                        <span>\n                                            <input\n                                                onChange={(event) => updateLessonTitle({\n                                                ...lesson,\n                                                title: event.target.value\n                                            })} value={lesson.title}/>\n                                            <i onClick={() => {ok(lesson);selected_id=\"\"}}\n                                               className=\"fa fa-check\"/>\n                                            <i onClick={() => deleteLesson(lesson._id)} className=\"fa fa-times\"/>\n                                        </span>\n                                }\n                            </div>\n                        </li>\n                )\n            }\n        </ul>\n        {\n            moduleId &&\n            <i onClick={() => createLesson(moduleId)}\n               className=\"fa fa-2x fa-plus-circle wbdv-lesson-add-btn pull-right\" aria-hidden=\"true\"/>\n        }\n    </div>\n\nconst stateToPropertyMapper = (state) => ({\n    lessons: state.lessonReducer.lessons,\n    lessonId: state.topicPillsReducer.lessonId,\n    moduleId: state.lessonReducer.moduleId,\n    course: state.courseReducer.course\n})\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n    ok: (lesson) =>\n        LessonService.updateLesson(lesson._id,{\n            ...lesson, editing: false\n        }).then(status => dispatch({\n            type: \"UPDATE_LESSON\",\n            lesson: {...lesson, editing: false}\n        })),\n    edit: (lesson) =>\n        LessonService.updateLesson(lesson._id, {\n            ...lesson, editing: true\n        }).then(status => dispatch({\n            type: \"UPDATE_LESSON\",\n            lesson: {...lesson, editing: true}\n        })),\n    updateLesson: (newLesson) =>\n        LessonService.updateLesson(newLesson._id, newLesson)\n            .then(actualLesson => dispatch({\n                type: \"UPDATE_LESSON\",\n                lesson: actualLesson\n            })),\n    deleteLesson: (lessonId) =>\n        LessonService.deleteLesson(lessonId)\n            .then(status => dispatch({\n                type: \"DELETE_LESSON\",\n                lessonId\n            })),\n    createLesson: (moduleId) =>\n        LessonService.createLesson(\n            moduleId, {\n                title: \"New Lesson\"\n            })\n            .then(actualLesson => dispatch({\n                type: \"CREATE_LESSON\",\n                lesson: actualLesson\n            })),\n    updateLessonTitle: (lesson) =>\n        dispatch({\n            type: \"UPDATE_LESSON\", lesson\n        })\n})\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LessonTabs)","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/lessons\"\nconst topicPillUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/topics\"\n\n\nconst findTopicPillsForLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`)\n        .then(response => response.json())\n\nconst createTopic = (lessonId, topic) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`, {\n        method: \"POST\",\n        body: JSON.stringify(topic),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\n\nconst deleteTopic = (topicPillId) =>\n    fetch(`${topicPillUrl}/${topicPillId}`, {\n        method: \"DELETE\"\n    }).then(response => response.json())\n\n\nconst updateTopic = (topicPill) =>\n    fetch(`${topicPillUrl}/${topicPill._id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(topicPill),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport default {\n    findTopicPillsForLesson,\n    createTopic,\n    updateTopic,\n    deleteTopic}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport TopicPillsService from \"../../services/TopicPillsService\";\nimport {Link} from \"react-router-dom\";\nlet selected_id = \"\"\nconst topicPills = ({topicPills=[],\n                        course={},\n                        lessonId,\n                        moduleId,\n                        topicId,\n                        createTopic,\n                        deleteTopicPills,\n                        updateTopicTitle,\n                        ok,\n                        edit\n}) =>\n    <div>\n        <ul className=\"nav nav-pills wbdv-topic-pill-list\">\n            {\n                topicPills.map(topicPill =>\n                    <li className={`nav-item \n                    ${ selected_id===topicPill._id || topicId===topicPill._id ? 'tab-active' : ''}`}\n                        key={topicPill._id}>\n                        {\n                            !topicPill.editing &&\n                            <Link to={`/edit/course/${course._id}/modules/${moduleId}/lessons/${lessonId}/topics/${topicPill._id}`}\n                            className={`nav-link wbdv-topic-pill`}>\n                                    {topicPill.title}\n                                <i className=\"fa fa-pencil pull-right\"\n                                   onClick={() => {\n                                       edit(topicPill); selected_id=topicPill._id}}/>\n                            </Link>\n                        }\n                        {\n                            topicPill.editing &&\n                                <span>\n                                    <input value={topicPill.title}\n                                           onChange={(event) => updateTopicTitle({\n                                               ...topicPill,\n                                               title: event.target.value})}/>\n                                    <i className=\"fa fa-times pull-right\" onClick={() => deleteTopicPills(topicPill._id)}/>\n                                    <i className=\"fa fa-check pull-right\" onClick={() => {\n                                        ok(topicPill); selected_id=\"\"\n                                }}/>\n                                </span>\n                        }\n\n                    </li>\n                )\n            }\n        </ul>\n        {\n            lessonId &&\n            <i onClick={() => createTopic(lessonId)}\n               className=\"fa fa-2x fa-plus-circle topic-pill-button pull-right\" aria-hidden=\"true\"/>\n        }\n    </div>\n\n\nconst stateToPropertyMapper = (state) => ({\n    topicPills: state.topicPillsReducer.topicPills,\n    topicId: state.widgetReducer.topicId,\n    lessonId: state.topicPillsReducer.lessonId,\n    moduleId: state.lessonReducer.moduleId,\n    course: state.courseReducer.course,\n})\n\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n    createTopic: (lessonId) => TopicPillsService.createTopic(lessonId, {\n        title: \"New Topic\"\n    }).then(actualTopic => dispatch({\n        type: \"CREATE_TOPIC\",\n        topicPills: actualTopic\n    })),\n    deleteTopicPills: (topicId) => TopicPillsService.deleteTopic(topicId)\n        .then(status => dispatch({\n            type: \"DELETE_TOPIC\", topicId\n        })),\n    updateTopicTitle: (topicPill) => dispatch({\n        type: \"UPDATE_TOPIC\", topicPill\n    }),\n    ok: (topicPill) =>\n        TopicPillsService.updateTopic({\n            ...topicPill, editing: false\n        }).then(status => dispatch({\n            type: \"UPDATE_TOPIC\",\n            topicPill: {...topicPill, editing: false}\n        })),\n    edit: (topicPill) =>\n        TopicPillsService.updateTopic({\n            ...topicPill, editing: true\n        }).then(status => dispatch({\n            type: \"UPDATE_TOPIC\",\n            topicPill: {...topicPill, editing: true}\n        })),\n\n})\n\n\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(topicPills)\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\n\n\n\nconst HeadingWidget = ({editing, index, length, widget, moveWidgetPos,updateWidget, deleteWidget}) => (\n    <div>\n        {\n            editing &&\n            <div>\n                <h3>Heading Widgets\n                    <button className=\"fa fa-times widget-delete-button float-right button-margin\"\n                            onClick={() => deleteWidget(widget.id)}/>\n                    <select className=\"float-right\" value={widget.type}\n                            onChange={(event) => updateWidget({\n                            ...widget, type: event.target.value})}>\n                        <option value=\"HEADING\">Heading</option>\n                        <option value=\"PARAGRAPH\">Paragraph</option>\n                    </select>\n                    {\n                        //position down button disappear when the widget is at the bottom\n                        index < length - 1 &&\n                        <button className=\"fa fa-arrow-down position-button float-right\"\n                                onClick={() => moveWidgetPos(index, index + 1)}/>\n                    }\n                    {\n                        //position up button disappear when the widget is on the top\n                        index > 0 &&\n                        <button className=\"fa fa-arrow-up position-button float-right\"\n                                onClick={() => moveWidgetPos(index, index-1)}/>\n                    }\n                </h3>\n                <input className=\"form-control input-field\" placeholder=\"Heading Text\" value={widget.text || \"\"}\n                       id={`headingWidgetText${widget.id}`} onChange={(event) => updateWidget({\n                    ...widget,\n                    text: event.target.value\n                })} />\n                <select className=\"form-control input-field\" value={widget.size} id={`headingWidgetSize${widget.id}`}\n                        onChange={(event) => updateWidget({\n                    ...widget,\n                    size: parseInt(event.target.value)\n                })}>\n                    <option value=\"1\">Heading 1</option>\n                    <option value=\"2\">Heading 2</option>\n                    <option value=\"3\">Heading 3</option>\n                    <option value=\"4\">Heading 4</option>\n                    <option value=\"5\">Heading 5</option>\n                    <option value=\"6\">Heading 6</option>\n                </select>\n                <input value={widget.name || \"\"} placeholder=\"Name\" className=\"form-control input-field\"\n                       id={`headingWidgetName${widget.id}`}\n                       onChange={(event => updateWidget({\n                    ...widget,\n                    name: event.target.value\n                }))}/>\n                <h3>Preview</h3>\n                <span>\n                    {widget.size === 1 && <h1>{widget.text}</h1>}\n                    {widget.size === 2 && <h2>{widget.text}</h2>}\n                    {widget.size === 3 && <h3>{widget.text}</h3>}\n                    {widget.size === 4 && <h4>{widget.text}</h4>}\n                    {widget.size === 5 && <h5>{widget.text}</h5>}\n                    {widget.size === 6 && <h6>{widget.text}</h6>}\n                </span>\n\n            </div>\n        }\n        {\n            ! editing &&\n            <span>\n                <h4>---Heading Widget---</h4>\n                {widget.size === 1 && <h1>{widget.text}</h1>}\n                {widget.size === 2 && <h2>{widget.text}</h2>}\n                {widget.size === 3 && <h3>{widget.text}</h3>}\n                {widget.size === 4 && <h4>{widget.text}</h4>}\n                {widget.size === 5 && <h5>{widget.text}</h5>}\n                {widget.size === 6 && <h6>{widget.text}</h6>}\n            </span>\n        }\n    </div>\n)\n\n\nexport default HeadingWidget\n\n\n\n","import React from \"react\";\n\n\nconst ParagraphWidget = ({editing, widget, index, length, updateWidget,moveWidgetPos, deleteWidget}) =>\n    <div>\n        {\n            editing &&\n            <div>\n                <h3>Paragraph Widgets\n                    <button className=\"fa fa-times widget-delete-button float-right\" onClick={() => deleteWidget(widget.id)}/>\n                    <select className=\"float-right\" value={widget.type} onChange={event => updateWidget({\n                        ...widget,\n                        type: event.target.value\n                    })}>\n                        <option value=\"HEADING\">Heading</option>\n                        <option value=\"PARAGRAPH\">Paragraph</option>\n                    </select>\n                    {\n                        //position up button disappear when the widget is on the top\n                        index > 0 &&\n                        <button className=\"fa fa-arrow-up position-button float-right\"\n                                onClick={() => moveWidgetPos(index, index-1)}/>\n                    }\n                    {\n                        //position down button disappear when the widget is at the bottom\n                        index < length - 1 &&\n                        <button className=\"fa fa-arrow-down position-button float-right\"\n                                onClick={() => moveWidgetPos(index, index + 1)}/>\n                    }\n                </h3>\n                <textarea className=\"form-control input-field\" placeholder=\"Paragraph Text\" value={widget.text || \"\"}\n                       onChange={event => updateWidget({\n                           ...widget,\n                           text: event.target.value\n                       })} />\n                <input value={widget.name || \"\"} placeholder=\"Paragraph Name\" className=\"form-control input-field\"\n                       onChange={(event => updateWidget({\n                    ...widget,\n                    name: event.target.value\n                }))}/>\n\n                <h3>Preview</h3>\n                <span>{widget.text}</span>\n            </div>\n        }\n        {\n            !editing &&\n                <span>\n                    <h4>---Paragraph Widget---</h4>\n                    <h5>{widget.text}</h5>\n                </span>\n\n        }\n    </div>\n\n\nexport default ParagraphWidget\n\n\n","const WIDGET_URL = \"https://mighty-beyond-40135.herokuapp.com/api/widgets\"\nconst TOPIC_URL  = \"https://mighty-beyond-40135.herokuapp.com/api/topics\"\n\nconst findAllWidgets = () =>\n    fetch(WIDGET_URL)\n        .then(response => response.json())\n\nconst findWidgetsForTopic = (topicId) =>\n    fetch(`${TOPIC_URL}/${topicId}/widgets`)\n        .then(response => response.json())\n\n//should accept an object in ()\nconst createWidgetForTopic = (topicId, widget) =>\n    fetch(`${TOPIC_URL}/${topicId}/widgets`,\n        {\n            method: \"POST\",\n            body: JSON.stringify(widget),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        })\n        .then(response => response.json())\n\nconst updateWidget = (widget) =>\n    fetch(`${WIDGET_URL}/${widget.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(widget),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nconst deleteWidget = (wid) =>\n    fetch(`${WIDGET_URL}/${wid}`, {\n        method: \"DELETE\"})\n    .then(response => response.json())\n\nconst updateWidgetForTopic = (topicId, widgets) =>\n    fetch(`${TOPIC_URL}/${topicId}/widgets`, {\n        method: \"PUT\",\n        body: JSON.stringify(widgets),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then(response => response.json())\n\nexport default {\n    findAllWidgets, createWidgetForTopic, findWidgetsForTopic, updateWidget, deleteWidget, updateWidgetForTopic\n}","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport HeadingWidget from \"../widgets/HeadingWidget\";\nimport ParagraphWidget from \"../widgets/ParagraphWidget\";\nimport WidgetService from \"../../services/WidgetService\";\n\nconst WidgetList = ({\n                        widgets=[],\n                        topicId,\n                        createWidgetForTopic,\n                        saveButton,\n                        updateWidget,\n                        moveWidgetPos,\n                        deleteWidget}) => {\n    const [editing, setEditing] = useState(false)\n    const toggle = () => {\n        setEditing(!editing)\n    }\n\n    return <div>\n        {\n            topicId &&\n            <div className=\"d-flex bd-highlight justify-content-end mb-3\">\n                <div className=\"d-flex align-items-center\">\n                    <button className=\"button-margin btn btn-success \" onClick={() => saveButton(topicId, widgets)}>Save</button>\n                    <div className=\"custom-control custom-switch d-inline-block\">\n                        <input type=\"checkbox\" className=\"custom-control-input\"\n                               id=\"customSwitches\" onClick={toggle}/>\n                        <label className=\"custom-control-label preview\"\n                               htmlFor=\"customSwitches\"><strong>Preview</strong></label>\n                    </div>\n                </div>\n            </div>\n        }\n\n        {\n            widgets.map((widget, index) =>\n                <i key={widget.id}>\n                    {\n                        widget.type === \"HEADING\" &&\n                        <HeadingWidget key={widget.id}\n                                       index={index}\n                                       editing={editing}\n                                       length={widgets.length}\n                                       widget={widget}\n                                       moveWidgetPos={moveWidgetPos}\n                                       deleteWidget={deleteWidget}\n                                       updateWidget={updateWidget}/>\n                    }\n                    {widget.type === \"PARAGRAPH\" &&\n                    <ParagraphWidget key={widget.id}\n                                     index={index}\n                                     editing={editing}\n                                     length={widgets.length}\n                                     widget={widget}\n                                     moveWidgetPos={moveWidgetPos}\n                                     deleteWidget={deleteWidget}\n                                     updateWidget={updateWidget}/>\n                    }\n                </i>\n            )\n        }\n        {\n            topicId &&\n            <i className=\"fa fa-2x fa-plus-circle float-right add-widget-button\" onClick={() => createWidgetForTopic(topicId)}/>\n        }\n    </div>\n}\n\n\n\nconst stateToPropertyMapper = (state) => ({\n    widgets: state.widgetReducer.widgets,\n    topicId: state.widgetReducer.topicId\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    deleteWidget: (widgetId) => dispatch({\n            type: \"DELETE_WIDGET\",widgetId\n    }),\n    createWidgetForTopic: (topicId) =>\n        WidgetService.createWidgetForTopic(topicId, {\n            type: \"HEADING\",\n            size: 1\n        }).then(widget => dispatch({\n            type: \"CREAT_WIDGET_FOR_TOPIC\",\n            widget\n        })),\n    saveButton: (topicId, widgets) => WidgetService.updateWidgetForTopic(topicId, widgets),\n    updateWidget: (widget) => dispatch({\n            type: \"UPDATE_WIDGET\", widget\n        }),\n    moveWidgetPos: (fromPos, toPos) => dispatch({type: \"MOVE_POSITION\", fromPos, toPos})\n})\n\n\nexport default connect\n( stateToPropertyMapper, propertyToDispatchMapper)\n(WidgetList)","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport WidgetList from \"../components/CourseEditor/WidgetList\";\nimport {deleteWidget} from \"../actions/widgetActions\"\n\n\nconst stateToPropertyMapper = (state) => ({\n    widgets: state.widgetReducer.widgets\n})\n\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\n})\n\n\n\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)(WidgetList)","export const CREATE_WIDGET = \"CREATE_WIDGET\";\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\";\nexport const DELETE_WIDGET = \"DELETE_WIDGET\";\nexport const FIND_WIDGETS_FOR_TOPIC = \"FIND_WIDGETS_FOR_TOPIC\";\nexport const MOVE_WIDGET = \"MOVE_WIDGET\";\n\nexport const updateWidget = (dispatch, widget) =>\n    dispatch({type: UPDATE_WIDGET, widget})\n\nexport const createWidget = (widget) => ({\n    type: CREATE_WIDGET,\n    widget: widget\n})\n\nexport const deleteWidget = (widgetId) => ({\n    type: DELETE_WIDGET,\n    widgetId: widgetId\n})\n\nexport const findWidgetsForTopic = (widgets) => ({\n    type: FIND_WIDGETS_FOR_TOPIC,\n    widgets: widgets\n})\n\nexport const moveWidget = (from, to) => ({\n    type: MOVE_WIDGET,\n    from: from,\n    to: to\n})\n","const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/modules\"\nconst courseUrl = \"https://wbdv-generic-server.herokuapp.com/api/10394858392/courses\"\n\nexport const createModule = (courseId, module) =>\n    fetch(`${courseUrl}/${courseId}/modules`, {\n        method: \"POST\",\n        body: JSON.stringify(module),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n\nexport const updateModule = (moduleId, module) =>\n    fetch(`${moduleUrl}/${moduleId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(module),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}`, {\n        method: \"DELETE\"\n    })\n        .then(response => response.json())\n\nexport const findModulesForCourse = (courseId) =>\n    fetch(`${courseUrl}/${courseId}/modules`)\n        .then(response => response.json())\n\nexport default {\n    updateModule, findModulesForCourse, createModule, deleteModule\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport moduleService from \"../../services/ModuleService\"\nimport {Link} from \"react-router-dom\";\n//initial course as an empty object\nlet selected_id = \"\";\nconst ModuleListComponent = ({course={}, modules=[], moduleId, deleteModule, createModule, updateModule, edit, ok}) =>\n    <div>\n        <ul className=\"wbdv-module-item\">\n            {\n                modules.map(module =>\n                    <li className={`list-group-item wbdv-module-item-style \n                    ${moduleId === module._id || selected_id===module._id ? 'active' : ''}`}\n                        key={module._id}>\n                        {\n                            !module.editing &&\n                            <span>\n                                <Link to={`/edit/course/${course._id}/modules/${module._id}`} className=\"link\">\n                                    {module.title}\n                                </Link>\n                                <i className=\"fa fa-pencil pull-right\"\n                                   onClick={() => {edit(module); selected_id=module._id}\n                                   }\n\n                                />\n                            </span>\n                        }\n                        {\n                            module.editing &&\n                            <span>\n                                <input onChange={(event) => updateModule({\n                                    ...module,\n                                    title: event.target.value\n                                })}\n                                       value={module.title}/>\n                                <i className=\"fa fa-trash pull-right\"\n                                   onClick={() => deleteModule(module)}/>\n                                <i className=\"fa fa-check pull-right\"\n                                   onClick={() => {ok(module); selected_id=\"\"}}>\n                                </i>\n                            </span>\n                        }\n                    </li>\n\n                )\n            }\n        </ul>\n        <i className=\"fa fa-plus fa-2x pull-right module-plus\"\n           onClick={() => createModule(course)}>\n        </i>\n    </div>\n\n\n\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    ok: (module) =>\n        moduleService.updateModule(module._id, {\n            ...module, editing: false\n        }).then(status => dispatch({\n            type: \"UPDATE_MODULE\",\n            module: {...module, editing: false}\n        })),\n    edit: (module) =>\n        moduleService.updateModule(module._id, {\n            ...module, editing: true\n        }).then(status => dispatch({\n            type: \"UPDATE_MODULE\",\n            module: {...module, editing: true}\n        })),\n    deleteModule: (module) =>\n        moduleService.deleteModule(module._id)\n            .then(status => dispatch({\n                type: \"DELETE_MODULE\",\n                module: module\n            })),\n    createModule: (course) =>\n        moduleService.createModule(course._id, {\n            title: \"New Module\"\n        }).then(actualModule => dispatch({\n            type: \"CREATE_MODULE\",\n            module: actualModule\n        })),\n    updateModule: (module) =>\n        //[option 1]only dispatch to reducer, not server\n        dispatch({\n            type: \"UPDATE_MODULE\",\n            module: module\n        }),\n    // [option 2]goes to the server\n    // moduleService.updateModule(module._id, module)\n    //   .then(status => dispatch({\n    //     type: \"UPDATE_MODULE\",\n    //     module: module\n    //   }))\n})\n\nconst stateToPropertyMapper = (state) => ({\n    modules: state.moduleReducer.modules,\n    moduleId: state.lessonReducer.moduleId,\n    course: state.courseReducer.course\n})\n\n//extract the modules from state, parses the state, and then parses the dispatch\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)(ModuleListComponent)","import React from \"react\";\nimport {findCourseById} from \"../../services/CourseService\";\nimport {Link} from \"react-router-dom\";\nimport LessonTabsComponent from \"./LessonTabsComponent\";\nimport TopicPillsComponent from \"./TopicPillsComponent\";\nimport WidgetListContainer from \"../../containers/WidgetListContainer\";\nimport ModuleListComponent from \"./ModuleListComponent\";\nimport {connect} from \"react-redux\";\nimport LessonService from \"../../services/LessonService\";\nimport ModuleService from \"../../services/ModuleService\";\nimport TopicPillsService from \"../../services/TopicPillsService\";\nimport WidgetService from \"../../services/WidgetService\"\n\n\nclass CourseEditorComponent extends React.Component {\n    //when refresh the screen\n    //fetching the course info from url, copy in the local state\n    componentDidMount() {\n        const courseId = this.props.match.params.courseId\n        const moduleId = this.props.match.params.moduleId\n        const lessonId = this.props.match.params.lessonId\n        const topicId = this.props.match.params.topicId\n        if(courseId) {\n            this.props.findCourseById(courseId)\n            this.props.findModulesForCourse(courseId)\n            //clean lesson and topic\n            this.props.clearTopic(\"0000\")\n            this.props.clearLesson(\"0000\")\n            this.props.cleanWidget(\"00000\")\n        }\n        if(moduleId) {\n            this.props.findLessonsForModule(moduleId)\n        }\n        if(lessonId) {\n            this.props.findTopicPillsForLesson(lessonId)\n        }\n        if(topicId) {\n            this.props.findWidgetsForTopic(topicId)\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //whne update the screen\n        const moduleId = this.props.match.params.moduleId\n        const lessonId = this.props.match.params.lessonId\n        const topicId = this.props.match.params.topicId\n\n        if(moduleId !== prevProps.match.params.moduleId) {\n            if(moduleId) {\n                this.props.findLessonsForModule(moduleId)\n                //topic should be empty here\n                this.props.clearTopic(\"000\")\n                this.props.cleanWidget(\"0000\")\n            }\n        }\n        if(lessonId !== prevProps.match.params.lessonId) {\n            if(lessonId){\n                this.props.findTopicPillsForLesson(lessonId)\n            }\n        }\n\n        if(topicId) {\n            this.props.findWidgetsForTopic(topicId)\n        }\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row wbdv-course-title\">\n                    <div className=\"col-4\">\n                        <h2><Link to=\"/\"\n                                  className=\"fa fa-times pull-left wbdv-close\"/>\n                            <span>{this.props.course.title} - WebDev</span>\n                        </h2>\n                    </div>\n                    <div className=\"col-8\">\n                        <LessonTabsComponent/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-4 wbdv-module-list\">\n                        <ModuleListComponent/>\n                    </div>\n                    <div className=\"col-8 border-set border border-dark\">\n                        <TopicPillsComponent/>\n                    <br/>\n                        <br/>\n                        <WidgetListContainer/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst stateToPropertyMapper = (state) => ({\n    course: state.courseReducer.course\n})\n\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    findAllWidgets: () => WidgetService.findAllWidgets().then(widgets => dispatch({\n        type: \"FIND_WIDGETS_FOR_TOPIC\", widgets\n        })),\n    //reading from url -> go to the server -> set courses to be actual course, dispatch to the reducer\n    findCourseById: (courseId) => findCourseById(courseId)\n        .then(actualCourse => dispatch({\n            type: \"SET_COURSES\",\n            course: actualCourse\n        })),\n    findModulesForCourse: (courseId) => ModuleService.findModulesForCourse(courseId)\n        .then(actualModules => dispatch({\n            type: \"FIND_MODULES_FOR_COURSE\",\n            modules: actualModules, courseId\n        })),\n    findLessonsForModule: (moduleId) => LessonService.findLessonsForModule(moduleId)\n        .then(lessons => dispatch({\n            type: \"FIND_LESSONS_FOR_MODULE\", lessons, moduleId\n        })),\n    findTopicPillsForLesson: (lessonId) => TopicPillsService.findTopicPillsForLesson(lessonId)\n        .then(topicPills => dispatch({\n            type: \"FIND_TOPICS_FOR_LESSON\", topicPills, lessonId\n        })),\n    findWidgetsForTopic: (topicId) => WidgetService.findWidgetsForTopic(topicId)\n        .then(widgets => dispatch({\n            type: \"FIND_WIDGETS_FOR_TOPIC\", widgets, topicId\n        })),\n    clearTopic: (noLessonId) => TopicPillsService.findTopicPillsForLesson(noLessonId)\n        .then(topicPills => dispatch({\n            type: \"FIND_TOPICS_FOR_LESSON\", topicPills, noLessonId\n        })),\n    clearLesson: (noModuleId) => LessonService.findLessonsForModule(noModuleId)\n        .then(lesson => dispatch({\n            type: \"FIND_LESSONS_FOR_MODULE\", lesson, noModuleId\n        })),\n    cleanWidget: (noTopicId) => WidgetService.findWidgetsForTopic(noTopicId)\n        .then(widget => dispatch({\n            type: \"FIND_WIDGETS_FOR_TOPIC\", widget, noTopicId\n        }))\n\n})\n\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)(CourseEditorComponent)","import React from \"react\";\nimport {updateCourse} from \"../services/CourseService\";\nimport {Link} from \"react-router-dom\";\n\n\nclass CourseRowComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            course: this.props.course,\n            editing: false,\n            selected: false,\n        }\n    }\n\n    updateTitle = (event) => {\n        const newTitle = event.target.value\n        this.setState(prevState => ({\n            course: {...this.state.course, title: newTitle}\n        }))\n    }\n\n    updateCourseToServer = () => {\n        updateCourse(this.state.course._id, this.state.course)\n            .then(this.setState({editing: false}))\n    }\n\n\n    selectedToggle = () => {\n        if (this.state.selected) {\n            this.setState({\n                background: \"white\",\n                selected: false,\n                font: \"black\"\n            });\n        } else {\n            this.setState({\n                background: \"aliceblue\",\n                selected: true,\n                font: \"white\"\n            });\n        }\n    };\n\n\n    render() {\n        return (\n            <tr onClick={this.selectedToggle} style={{\n                background: this.state.background,\n                font: this.state.font\n            }}>\n                <td>\n                    <i className=\"fa fa-file-text-o\" aria-hidden=\"true\"/>\n                    {\n                        this.state.editing &&\n                        <input\n                            // className=\"form-control\"\n                            onChange={this.updateTitle}\n                            value={this.state.course.title}/>\n                    }\n                    {\n                        !this.state.editing &&\n                        <Link to={`/edit/course/${this.state.course._id}`}>{this.state.course.title}</Link>\n                    }\n                </td>\n                <td>\n                    <span className=\"d-none d-sm-block\">{this.state.course.owner}</span></td>\n                <td>\n                    <span className=\"d-none d-lg-block\">{this.state.course.modified}</span>\n                </td>\n                <td>\n                    {\n                        !this.state.editing &&\n                        <i className=\"fa fa-2x fa-trash\" onClick={() => this.props.deleteCourse(this.state.course)}/>\n                    }\n                    {\n                        this.state.editing &&\n                        <i className=\"fa fa-2x fa-check\" onClick={this.updateCourseToServer}/>\n                    }\n                    {\n                        !this.state.editing &&\n                        <i className=\"fa fa-2x fa-pencil\" onClick={() => this.setState({editing: true})}/>\n                    }\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default CourseRowComponent","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\n\nconst CourseTableComponent = ({courses, deleteCourse, editCourse}) =>\n    <tbody>\n    {\n        courses.map(function (course) {\n            return <CourseRowComponent\n                editCourse={editCourse}\n                deleteCourse={deleteCourse}\n                key={course._id}\n                course={course}/>\n        })\n    }\n    </tbody>;\n\n\nexport default CourseTableComponent\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {updateCourse} from \"../services/CourseService\";\nimport \"../styling/CourseEditor.css\"\n\nclass CourseCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            editing: false,\n            course: this.props.course\n        }\n    }\n\n    updateTitle = (event) => {\n        const newTitle = event.target.value\n        this.setState(prevState => ({\n            course: {...this.state.course, title: newTitle}\n        }))\n    }\n\n    updateCourseToServer = () => {\n        updateCourse(this.state.course._id, this.state.course)\n            .then(this.setState({editing: false}))\n    }\n\n    render() {\n        return (\n            <div className=\"card col-sm-6 col-md-4 col-lg-3 col-xl-2 col-12 pl-2 card-pos\">\n                <img className=\"card-img-bottom\"\n                     src=\"https://img.resume.com/examples/new/customer-service-two-year-exp.jpeg\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                        <i className=\"fa fa-file-text-o\" aria-hidden=\"true\"/>\n                        {\n                            this.state.editing &&\n                            <input\n                                className=\"form-control\"\n                                onChange={this.updateTitle}\n                                value={this.state.course.title}/>\n                        }\n                        {\n                            !this.state.editing &&\n                            <Link to={`/edit/course/${this.state.course._id}`}>{this.state.course.title}</Link>\n                        }\n                    </h5>\n                    <p className=\"card-text\"> Modified {this.state.course.modified}</p>\n                    <i className=\"fa fa-2x fa-trash pull-right\" onClick={() => this.props.deleteCourse(this.props.course)}/>\n                    {\n                        this.state.editing &&\n                        <i className=\"fa fa-2x fa-check pull-right\" onClick={this.updateCourseToServer}/>\n                    }\n                    {\n                        !this.state.editing &&\n                        <i className=\"fa fa-2x fa-pencil pull-right\" onClick={() => this.setState({editing: true})}/>\n                    }\n                </div>\n            </div>)\n    }\n}\nexport default CourseCard","import React from \"react\";\nimport CourseCard from \"./CourseCard\";\n\n\nconst CourseGridComponent = ({courses, deleteCourse}) =>\n\n        <div className=\"container row\">\n            {\n                courses.map((course) =>\n                    (<CourseCard\n                        deleteCourse={deleteCourse}\n                        key={course._id}\n                        course={course}/>)\n                )\n            }\n        </div>\n    ;\n\nexport default CourseGridComponent","import React from \"react\"\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport CourseEditorComponent from \"./CourseEditor/CourseEditorComponent\";\nimport {createCourse, findAllCourses, deleteCourse} from \"../services/CourseService\";\nimport CourseTableComponent from \"./CourseTableComponent\";\nimport CourseGridComponent from \"./CourseGridComponent\";\nimport \"../styling/CourseManagerComponent.css\"\nimport \"../styling/CourseEditor.css\"\n\n\nexport default class CourseManagerComponent extends React.Component {\n\n    state = {\n        courses: [],\n        courseBeingEdited: {},\n        course: this.props.course,\n        layout: \"table\",\n        inputCourseTitle: false\n    }\n\n    componentDidMount() {\n        findAllCourses()\n            .then(courses => {\n                this.setState({\n                    courses: courses\n                })\n            })\n    }\n\n    changeView = () => {\n        {\n            this.state.layout === \"table\" &&\n            this.setState({\n                layout: \"grid\"\n            })\n        }\n        {\n            this.state.layout === \"grid\" &&\n            this.setState({\n                layout: \"table\"\n            })\n        }\n    }\n\n    deleteCourse = (course) => {\n        deleteCourse(course._id)\n            .then(status => this.setState(prevState =>({\n                    courses: prevState.courses.filter(c => c._id !== course._id)\n                })\n            ))\n            .catch(error => {\n            })\n    }\n\n    addCourse = () => {\n        let newCourse;\n        if (this.state.inputCourseTitle) {\n            newCourse = {\n                title: this.state.course.title,\n                owner: \"me\",\n                modified: (new Date()).toDateString()\n            }\n        }\n        else {\n            newCourse = {\n                title: \"New Course\",\n                owner: \"me\",\n                modified: (new Date()).toDateString()\n            }\n        }\n        createCourse(newCourse)\n            .then(actualCourse => this.setState(prevState => ({\n                courses: [\n                    ...prevState.courses, actualCourse\n                ]\n            })))\n        this.setState({\n            inputCourseTitle: false\n        })\n    }\n\n    editCourse = (course) => {\n        this.setState({\n            courseBeingEdited: course\n        })\n    }\n\n    updateTitle = (event) => {\n        const newTitle = event.target.value\n        const course = { ...this.state.course }\n        course.title = newTitle\n        this.setState({\n            course: course,\n            inputCourseTitle: true\n        })\n    }\n\n\n    render () {\n        return (\n            <BrowserRouter>\n                <div className=\"container\">\n                    <Route path={[\"/:layout\", \"/\"]} exact>\n                        <div className=\"container\">\n                            <div className=\"form-group row\">\n                                <h1 className=\"wbdv-sticky-header\">\n                                    <a href={\"#\"} className=\"fa fa-bars wbdv-hamburger\" aria-hidden=\"true\"/>\n                                    <span className=\"mobile-hide course-mag\">Course Manager</span>\n                                    <input placeholder={\"New Course\"} type={\"text\"} className=\"wbdv-new-course\"\n                                           onChange={this.updateTitle}/>\n                                    <span className=\"fa fa-plus-circle wbdv-add-course-button\" aria-hidden={\"true\"}\n                                          onClick={this.addCourse}/>\n                                    <span className=\"fa fa-plus-circle pull-right wbdv-sticky-add-course-button\" aria-hidden={\"true\"}/>\n                                </h1>\n                            </div>\n                            {\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr>\n                                        <th>Title</th>\n                                        <th>\n                                            <span className=\"d-none d-sm-block\">Owned by</span></th>\n                                        <th>\n                                            <span className=\"d-none d-lg-block\">Last modified</span>\n                                        </th>\n                                        <th>\n                                            {\n                                                this.state.layout === \"table\" &&\n                                                    <Link to=\"/grid\">\n                                                        <button><i className=\"fa fa-th wbdv-grid-layout\" aria-hidden=\"true\"\n                                                                   onClick={this.changeView}/></button>\n                                                    </Link>\n                                            }\n                                            {\n                                                this.state.layout === \"grid\" &&\n                                                    <Link to=\"/table\">\n                                                        <button><i className=\"fa fa-list-ol wbdv-list-layout\" aria-hidden=\"true\"\n                                                                   onClick={this.changeView}/></button>\n                                                    </Link>\n                                            }\n                                            <button href=\"#\"><i className=\"fa fa-sort-alpha-asc wbdv-sort\" aria-hidden=\"true\"/></button>\n                                        </th>\n                                    </tr>\n                                    </thead>\n                                    {\n                                        this.state.layout === \"table\" &&\n                                        <CourseTableComponent\n                                            deleteCourse={this.deleteCourse}\n                                            courses={this.state.courses}/>\n                                    }\n                                </table>\n                            }\n                            {\n                                this.state.layout === \"grid\" &&\n                                <CourseGridComponent\n                                    deleteCourse={this.deleteCourse}\n                                    courses={this.state.courses}/>\n                            }\n                        </div>\n                    </Route>\n                    <Route path={[\"/edit/course/:courseId\",\n                        \"/edit/course/:courseId/modules/:moduleId\",\n                    \"/edit/course/:courseId/modules/:moduleId/lessons/:lessonId\",\n                    \"/edit/course/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\"]}\n                           exact component={CourseEditorComponent}/>\n                </div>\n            </BrowserRouter>\n\n\n        );\n    }\n\n\n}","const initialState = {\n    widgets: []\n}\n\nexport const widgetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FIND_WIDGETS_FOR_TOPIC\":\n            return {\n                ...state,\n                widgets: action.widgets,\n                topicId: action.topicId\n            }\n        case \"FIND_ALL_WIDGETS\":\n            return {\n                ...state,\n                widgets: action.widgets\n            }\n        case \"CREAT_WIDGET_FOR_TOPIC\":\n            return {\n                ...state,\n                widgets: [\n                    ...state.widgets,\n                    action.widget\n                ]\n            }\n        case \"UPDATE_WIDGET\":\n            return {\n                ...state,\n                widgets: state.widgets.map(widget =>\n                widget.id === action.widget.id ? action.widget: widget)\n            }\n        case \"DELETE_WIDGET\":\n            return {\n                ...state,\n                widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\n            }\n        case \"MOVE_POSITION\":\n            const newWidgets = [...state.widgets];\n            //update new widget position\n            newWidgets[action.fromPos] = newWidgets.splice(action.toPos, 1, newWidgets[action.fromPos])[0];\n            return {\n                ...state,\n                widgets: newWidgets\n            }\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer","const initialState = {\n    modules: []\n}\n\nconst moduleReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case \"DELETE_MODULE\":\n            return {\n                ...state,\n                //if different will keep it, otherwise filter out\n                modules: state.modules.filter(module => module._id !== action.module._id)\n            }\n\n        case \"CREATE_MODULE\":\n            return {\n                ...state,\n                modules: [\n                    ...state.modules, //old modules\n                    action.module   //append the new module\n                ]\n            }\n        case \"UPDATE_MODULE\":\n            return {\n                ...state,\n                modules: state.modules.map(module => module._id === action.module._id ? action.module : module)\n            }\n\n        case \"FIND_MODULES_FOR_COURSE\":\n            return {\n                ...state,\n                modules: action.modules,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default moduleReducer","const initialState = {\n    courses: [],\n    course: {}\n}\n\nconst courseReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case \"SET_COURSES\":\n            return {\n                ...state,\n                course: action.course\n            }\n        default:\n            return state\n    }\n}\n\n\nexport default courseReducer","const lessonReducer = (state={}, action) => {\n    switch (action.type) {\n        case \"UPDATE_LESSON\":\n            return {\n                ...state,\n                lessons: state.lessons.map(lesson => lesson._id === action.lesson._id ? action.lesson : lesson)\n            }\n        case \"DELETE_LESSON\":\n            return {\n                ...state,\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\n            }\n        case \"FIND_LESSONS_FOR_MODULE\":\n            return {\n                ...state,\n                lessons: action.lessons,\n                moduleId: action.moduleId\n            }\n        case \"CREATE_LESSON\":\n            return {\n                ...state,\n                lessons: [\n                    ...state.lessons,\n                    action.lesson\n                ]\n            }\n        default:\n            return state\n    }\n}\n\nexport default lessonReducer","const initialState = {\n    topicPills: []\n}\n\n\nconst topicPillsReducer = (state=initialState, action) => {\n    switch(action.type){\n        case \"FIND_TOPICS_FOR_LESSON\":\n            return {\n                ...state,\n                topicPills: action.topicPills,\n                lessonId: action.lessonId\n            }\n        case \"CREATE_TOPIC\":\n            return {\n                ...state,\n                topicPills: [\n                    ...state.topicPills,\n                    action.topicPills\n                ]\n            }\n        case \"DELETE_TOPIC\":\n            return {\n                ...state,\n                topicPills: state.topicPills.filter(topicPill => topicPill._id !== action.topicId)\n            }\n        case \"UPDATE_TOPIC\":\n            return {\n                ...state,\n                topicPills: state.topicPills.map(topicPill =>\n                    topicPill._id === action.topicPill._id ? action.topicPill: topicPill)\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default topicPillsReducer","import React from 'react';\nimport {Provider} from \"react-redux\"\nimport ReactDOM from 'react-dom';\n//import \"./index.css\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"font-awesome/css/font-awesome.css\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CourseManagerComponent from \"./components/CourseManagerComponent\";\nimport {combineReducers, createStore} from \"redux\";\nimport widgetReducer from \"./reducers/widgetReducer\";\nimport moduleReducer from \"./reducers/moduleReducer\";\nimport courseReducer from \"./reducers/courseReducer\";\nimport lessonReducer from \"./reducers/lessonReducer\";\nimport topicPillsReducer from \"./reducers/topicPillsReducer\";\n\n\nconst reducers = combineReducers({\n    widgetReducer, moduleReducer, courseReducer, lessonReducer, topicPillsReducer,\n})\n\nconst store = createStore(reducers)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <CourseManagerComponent/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}